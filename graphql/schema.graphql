# Arbitrary JSON object
scalar Json

type QuerySort {
  attribute: String
  direction: String
}

type QuerySettings {
  federation: String
  phonetics: Boolean
  sorts: [QuerySort]
  spellcheck: Boolean
  type: String
}

input QueryRequest {
  src: String
  filterTree: Json
}

type QueryResponseStatus {
  count: Int
  elapsed: Int
  hits: Int
  id: ID
  successful: Boolean
}

type MetacardAction {
  description: String
  displayName: String
  id: ID
  title: String
  url: String
}

type QueryResponseResult {
  actions: [MetacardAction]
  metacard: Json
}

# Binary content embedded as a base64 String
scalar Binary
# WKT embedded as a String
scalar Geometry
# XML embedded as a String
scalar XML
# ISO 8601 Data Time embedded as a String
scalar Date

# Common and well known metacard attributes
type MetacardAttributes {
  associationsExternal: [String]
  checksum: String
  checksumAlgorithm: String
  contactContributorAddress: [String]
  contactContributorEmail: [String]
  contactContributorName: [String]
  contactContributorPhone: [String]
  contactCreatorAddress: [String]
  contactCreatorEmail: [String]
  contactCreatorName: [String]
  contactCreatorPhone: [String]
  contactPointOfContactAddress: [String]
  contactPointOfContactEmail: [String]
  contactPointOfContactName: [String]
  contactPointOfContactPhone: [String]
  contactPublisherAddress: [String]
  contactPublisherEmail: [String]
  contactPublisherName: [String]
  contactPublisherPhone: [String]
  created: Date
  datatype: [String]
  datetimeEnd: [Date]
  datetimeName: [String]
  datetimeStart: [Date]
  description: String
  effective: Date
  expiration: Date
  extFeatureClass: String
  extFeatureCode: String
  extGazetteerSortValue: Int
  extImportLocation: String
  extPopulation: Int
  failedValidatorsErrors: [String]
  failedValidatorsWarnings: [String]
  id: ID
  language: [String]
  location: Geometry
  locationAltitudeMeters: [Float]
  locationCountryCode: [String]
  locationCrsCode: [String]
  locationCrsName: [String]
  mediaBitRate: Float
  mediaBitsPerSample: Int
  mediaCompression: String
  mediaDuration: Float
  mediaEncoding: [String]
  mediaFormat: String
  mediaFormatVersion: String
  mediaFrameCenter: Geometry
  mediaFrameRate: Float
  mediaHeightPixels: Int
  mediaNumberOfBands: Int
  mediaScanningMode: String
  mediaType: String
  mediaWidthPixels: Int
  metacardTags: [String]
  metacardAssociationsDerived: [String]
  metacardAssociationsRelated: [String]
  metacardCreated: Date
  metacardModified: Date
  metacardOwner: String
  metadata: XML
  modified: Date
  pointOfContact: String
  resourceDownloadUrl: String
  resourceSize: String
  resourceUri: String
  resourceDerivedDownloadUrl: [String]
  resourceDerivedUri: [String]
  securityAccessAdministrators: [String]
  securityAccessGroups: [String]
  securityAccessGroupsRead: [String]
  securityAccessIndividuals: [String]
  securityAccessIndividualsRead: [String]
  sourceId: String
  thumbnail: Binary
  title: String
  topicCategory: [String]
  topicKeyword: [String]
  topicVocabulary: [String]
  validationErrors: [String]
  validationWarnings: [String]
  uiAttributeGroup: [String]
  metadataContentType: String
  metadataContentTypeVersion: String
  metadataTargetNamespace: String
  extExtractedText: String
  extMp4AudioSampleRate: Int
  cql: String
  detailLevel: String
  enterprise: Boolean
  extNoteResultComment: [String]
  facets: [String]
  federation: String
  filtertree: String
  listBookmarks: [String]
  listCql: String
  listIcon: String
  lists: [XML]
  metacardDeletedDeletedBy: String
  metacardDeletedId: String
  metacardDeletedVersion: String
  metacardSharing: [XML]
  phonetics: Boolean
  polling: Int
  queries: [String]
  schedules: [XML]
  sorts: [String]
  sources: [String]
  spellcheck: Boolean
  type: String
  uiTemplateFilter: XML
  metacardVersionAction: String
  metacardVersionEditedBy: String
  metacardVersionId: String
  metacardVersionResourceUri: String
  metacardVersionTags: [String]
  metacardVersionType: String
  metacardVersionTypeBinary: Binary
  metacardVersionVersionedOn: Date
}

type QueryResponse {
  results: [QueryResponseResult]
  attributes: [MetacardAttributes]
  status: QueryResponseStatus
}

type ImageryProvider {
  id: ID
  alpha: Int
  label: String
  name: String
  order: Int
  parameters: Json
  proxyEnabled: Boolean
  show: Boolean
  type: String
  url: String
}

type TerrainProvider {
  type: String
  url: String
}

# Admin configured system properties
type SystemProperties {
  attributeAliases: Json
  attributeDescriptions: Json
  basicSearchMatchType: String
  basicSearchTemporalSelectionDefault: [String]
  bingKey: String
  branding: String
  customBackgroundAccentContent: String
  customBackgroundContent: String
  customBackgroundDropdown: String
  customBackgroundModal: String
  customBackgroundNavigation: String
  customBackgroundSlideout: String
  customFavoriteColor: String
  customNegativeColor: String
  customPositiveColor: String
  customPrimaryColor: String
  customWarningColor: String
  defaultLayout: [Json]
  disableLocalCatalog: Boolean
  disableUnknownErrorBox: Boolean
  editorAttributes: [String]
  enums: Json
  exportResultLimit: Int
  externalAuthentication: Boolean
  facetWhitelist: [String]
  gazetteer: Boolean
  hiddenAttributes: [String]
  i18n: Json
  imageryProviders: [ImageryProvider]
  isArchiveSearchDisabled: Boolean
  isCacheDisabled: Boolean
  isEditingAllowed: Boolean
  isExperimental: Boolean
  isHistoricalSearchDisabled: Boolean
  isMetacardPreviewDisabled: Boolean
  isPhoneticsEnabled: Boolean
  isSpellcheckEnabled: Boolean
  isVersioningEnabled: Boolean
  listTemplates: [String]
  mapHome: String
  onlineGazetteer: Boolean
  product: String
  projection: String
  queryFeedbackEmailBodyTemplate: String
  queryFeedbackEmailSubjectTemplate: String
  queryFeedbackEnabled: Boolean
  readOnly: [String]
  relevancePrecision: Int
  requiredAttributes: [String]
  resultCount: Int
  resultShow: [String]
  scheduleFrequencyList: [Int]
  showIngest: Boolean
  showLogo: Boolean
  showRelevanceScores: Boolean
  showTask: Boolean
  showWelcome: Boolean
  sourcePollInterval: Int
  spacingMode: String
  summaryShow: [String]
  terrainProvider: TerrainProvider
  theme: String
  timeout: Int
  typeNameMapping: Json
  useHyphensInUuid: Boolean
  version: String
  webSocketsEnabled: Boolean
  zoomPercentage: Int

  background: String
  color: String
  favIcon: String
  footer: String
  header: String
  productImage: String
  title: String
  vendorImage: String

  commitHash: String
  isDirty: String
  commitDate: String
  identifier: String
  releaseDate: String
}

type Source {
  available: Boolean
  contentTypes: [String]
  id: ID
  sourceActions: [String]
  version: String
}

type DateTimeFormatPreference {
  datetimefmt: String
  timefmt: String
}

type ThemePreferences {
  customBackgroundAccentContent: String
  customBackgroundContent: String
  customBackgroundDropdown: String
  customBackgroundModal: String
  customBackgroundNavigation: String
  customBackgroundSlideout: String
  customFavoriteColor: String
  customNegativeColor: String
  customPositiveColor: String
  customPrimaryColor: String
  customWarningColor: String
  spacingMode: String
  theme: String
}

type UserPreferences {
  alertExpiration: Int
  alertPersistence: Boolean
  alerts: [String]
  animation: Boolean
  columnHide: [String]
  columnOrder: [String]
  coordinateFormat: String
  dateTimeFormat: DateTimeFormatPreference
  fontSize: Int
  goldenLayout: Json
  homeDisplay: String
  homeFilter: String
  homeSort: String
  hoverPreview: Boolean
  id: String
  inspectorDetailsHidden: [String]
  inspectorDetailsOrder: [String]
  inspectorSummaryOrder: [String]
  inspectorSummaryShown: [String]
  mapLayers: [ImageryProvider]
  querySettings: QuerySettings
  resultBlacklist: [String]
  resultCount: Int
  resultDisplay: String
  resultPreview: [String]
  theme: ThemePreferences
  timeZone: String
  uploads: [Json]
  visualization: String
}

# Current logged in user
type User {
  email: String
  isGuest: Boolean
  preferences: UserPreferences
  roles: [String]
  userid: String
  username: String
}

# Registered metacard attribute type
type MetacardType {
  id: ID
  isInjected: Boolean
  multivalued: Boolean
  type: String
}

type Query {
  user: User
  sources: [Source]
  systemProperties: SystemProperties
  metacardTypes: [MetacardType]
  metacards(q: QueryRequest): QueryResponse
  metacardsByTag(tag: String): QueryResponse
}

type MutationResponse {
  metacard: Json
  attributes: [MetacardAttributes]
}

type Mutation {
  createMetacard(attrs: Json): MetacardAttributes
  saveMetacard(attrs: Json): MetacardAttributes
  deleteMetacard(id: ID): ID
}
